#!/usr/bin/env python 

import sys
import re
from subprocess import Popen, PIPE, check_output 

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Uso: pctest.py source.cpp")

    source = sys.argv[1]

    cmd = ["g++", "-o", "/tmp/pctest", source]
    check_output(cmd)

    with open(source) as file:
        sourcestr = file.read()

        regex = re.compile(r"/\*(.*?)\*/", re.DOTALL)

        match = re.search(regex, sourcestr)

        if match is None:
            print("No hay tests")
            sys.exit(0)

        teststr = match.group(1)

        regex = re.compile(r"input([\s\S]*?)copy", re.IGNORECASE | re.DOTALL | re.MULTILINE)
        _, *tests = re.split(regex, teststr)

        tests = [t for t in tests if t.strip() != ""]

    for i, test in enumerate(tests):
        regex = re.compile(r"output([\s\S]*?)copy", re.IGNORECASE | re.DOTALL | re.MULTILINE)
        _input, _, _output = map(str.strip, re.split(regex, test))

        print("running test {}".format(i))

        p = Popen(["/./tmp/pctest"], stdout=PIPE, stdin=PIPE, stderr=PIPE)
        result, error = p.communicate(input=_input.encode())

        print("expected: ", _output)
        print("received: ", result.decode())
        if error:
            print("error: ", error.decode())

